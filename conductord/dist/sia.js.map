{"version":3,"file":"sia.js","sourceRoot":"","sources":["../src/sia.ts"],"names":[],"mappings":"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","sourcesContent":["import * as R from 'ramda';\n\nimport axios, { AxiosInstance } from 'axios';\n\nimport { Host } from './model';\n\nlet siads: Record<number,AxiosInstance> = {};\n\nexport const prepare = async (host: Host) => {\n  if (host.port === undefined)\n    return console.error('error! host has no port');\n  siads[host.port] = axios.create({\n    baseURL: `http://localhost:${host.port}`,\n    auth: {\n      username: '',\n      password: host.apipassword || ''\n    },\n    headers: {\n      common: {\n        'Content-Type': 'application/json',\n        'User-Agent': 'Sia-Agent',\n      },\n    },\n  });\n  const hostData = await collectHost(host.port);\n  return R.path(['data', 'publickey', 'key'], hostData);\n}\n\nexport const collectHost = async (port: number) => {\n  if (!siads[port])\n    throw 'error! no host on port ' + port;\n  const hostData = await siads[port].get('/host');\n  return hostData;\n};\n\nexport const getStorage = async (port: number) => {\n  const resp = await siads[port].get('/host/storage');\n  return R.compose(\n    R.sum,\n    R.map(\n      (folder: any) =>\n        parseInt(R.prop('capacity', folder)) -\n        parseInt(R.prop('capacityremaining', folder)),\n    ),\n    R.path(['data', 'folders']),\n  )(resp);\n};\n\nexport const getHostSettings = async (host: Host) => {\n  if (!host.port) {\n    throw `Error! Host ${host._id} has no port`;\n  }\n  const hostSettings = await collectHost(host.port);\n  const scoreEstimateResp = await siads[host.port].get('/host/estimatescore');\n  const walletinfo = await siads[host.port].get('/wallet');\n  const externalsettings = hostSettings.data.externalsettings;\n  return {\n    downloadbandwidthprice: externalsettings.downloadbandwidthprice,\n    uploadbandwidthprice: externalsettings.uploadbandwidthprice,\n    storageprice: externalsettings.storageprice,\n    workingstatus: hostSettings.data.workingstatus,\n    scoreestimate: scoreEstimateResp.data.conversionrate,\n    wallet: {\n      balance: walletinfo.data.confirmedsiacoinbalance,\n      unlocked: walletinfo.data.unlocked,\n    }\n  }\n} "]}